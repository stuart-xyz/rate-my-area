version: 2
jobs:
  build-frontend:
    docker:
      - image: circleci/node:8.9.3
    working_directory: ~/repo
    steps:
      - checkout
      - run: cd ui
      - restore_cache:
          keys:
          - frontend-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - frontend-dependencies-
      - run: npm test
      - run: npm run build
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: mkdir -p /tmp/workspace
      - run: cp -r build /tmp/workspace
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - build

  build-backend:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - backend-dependencies-{{ checksum "build.sbt" }}
          # fallback to using the latest cache if no exact match is found
          - backend-dependencies-
      - attach_workspace:
          at: /tmp/workspace
      - run: cp /tmp/workspace/build/* ../public/compiled
      - run: cat /dev/null | sbt test:compile
      - run: cat /dev/null | sbt test:test
      - run: cat /dev/null | sbt dist
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "build.sbt" }}
      - store_artifacts:
          path: ~/repo/build
          destination: build

  deploy:
    machine: true
    steps:
      - checkout
      - run: docker build -t stuartp.io/ratemyarea --build-arg BUILD_ENV=dev .
      - run: aws configure && $(aws ecr get-login --region eu-west-2 --no-include-email)
      - run: docker push stuartp.io/ratemyarea:circle

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-frontend
      - build-backend:
          requires:
            - build-frontend
      - deploy:
          requires:
            - build-backend
#          filters:
#            branches:
#              only: master
